/************************************************************************
 * This file has been generated automatically from                      *
 *                                                                      *
 * src/core/raster/qgsrasterdataprovidertemporalcapabilities.h          *
 *                                                                      *
 * Do not edit manually ! Edit header and run scripts/sipify.pl again   *
 ************************************************************************/





class QgsRasterDataProviderTemporalCapabilities : QgsDataProviderTemporalCapabilities
{
%Docstring
Implementation of data provider temporal properties for QgsRasterDataProviders.

Data provider temporal capabilities reflect the temporal capabilities of a QgsDataProvider.
Unlike QgsMapLayerTemporalProperties, these settings are not user-configurable,
and should only be set by the QgsDataProvider itself.

.. versionadded:: 3.14
%End

%TypeHeaderCode
#include "qgsrasterdataprovidertemporalcapabilities.h"
%End
  public:

    QgsRasterDataProviderTemporalCapabilities( bool enabled = false );
%Docstring
Constructor for :py:class:`QgsRasterDataProviderTemporalProperties`.
%End

    virtual ~QgsRasterDataProviderTemporalCapabilities();

    void setTemporalRange( const QgsDateTimeRange &dateTimeRange );
%Docstring
Sets the current active datetime range for the temporal properties.

.. seealso:: :py:func:`temporalRange`
%End

    const QgsDateTimeRange &temporalRange() const;
%Docstring
Returns the current active datetime range for these temporal properties.

.. seealso:: :py:func:`setTemporalRange`
%End

    void setReferenceTemporalRange( const QgsDateTimeRange &dateTimeRange );
%Docstring
Sets the current active reference datetime range for the temporal properties.

This will be used by bi-temporal dimensional data providers.

.. seealso:: :py:func:`referenceTemporalRange`
%End

    const QgsDateTimeRange &referenceTemporalRange() const;
%Docstring
Returns the current active reference datetime range for these temporal properties.

.. seealso:: :py:func:`setReferenceTemporalRange`
%End

    void setFixedTemporalRange( const QgsDateTimeRange &dateTimeRange );
%Docstring
Sets the fixed datetime range for the temporal properties.

.. seealso:: :py:func:`fixedTemporalRange`
%End

    const QgsDateTimeRange &fixedTemporalRange() const;
%Docstring
Returns the fixed datetime range for these temporal properties.

.. seealso:: :py:func:`setFixedTemporalRange`
%End

    void setFixedReferenceTemporalRange( const QgsDateTimeRange &dateTimeRange );
%Docstring
Sets the fixed reference datetime range for the temporal properties.

.. seealso:: :py:func:`fixedReferenceTemporalRange`
%End

    const QgsDateTimeRange &fixedReferenceTemporalRange() const;
%Docstring
Returns the fixed reference datetime range for these temporal properties.

.. seealso:: :py:func:`setFixedReferenceTemporalRange`
%End

    void setEnableTime( bool enabled );
%Docstring
Sets the time enabled status.
This enables whether time part in the temporal range should be
used when updated the temporal range of these capabilities.

This is useful in some temporal layers who use dates only.

.. seealso:: :py:func:`isTimeEnabled`
%End

    bool isTimeEnabled() const;
%Docstring
Returns the temporal property status.

.. seealso:: :py:func:`setEnableTime`
%End

    void setHasReference( bool enabled );
%Docstring
Sets the reference range status.

.. seealso:: :py:func:`hasReference`
%End

    bool hasReference() const;
%Docstring
Returns the reference range presence status.

.. seealso:: :py:func:`setHasReference`
%End

    void setReferenceEnable( bool enabled );
%Docstring
Sets the usage status of the reference range.

.. seealso:: :py:func:`isReferenceEnable`
%End

    bool isReferenceEnable() const;
%Docstring
Returns the enabled status of the reference range.

.. seealso:: :py:func:`setReferenceEnable`
%End

};

/************************************************************************
 * This file has been generated automatically from                      *
 *                                                                      *
 * src/core/raster/qgsrasterdataprovidertemporalcapabilities.h          *
 *                                                                      *
 * Do not edit manually ! Edit header and run scripts/sipify.pl again   *
 ************************************************************************/
